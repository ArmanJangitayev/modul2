"""Реализация HTTP-сервера для обработки POST-запросов

Создайте HTTP-сервер с использованием языка программирования Python и фреймворка Flask.

Разработайте HTML-форму, которая содержит следующие элементы:

Одно текстовое поле для ввода данных.
Кнопку отправки формы.
Убедитесь, что форма отправляет данные на сервер с использованием метода POST.

На сервере, реализуйте обработчик POST-запроса для адреса /submit. Этот обработчик должен выполнять следующие действия:

Получать данные из формы, введенные пользователем.
Выводить полученные данные в консоль сервера с помощью функции print().
-Создайте главную страницу вашего сервера по адресу /, на которой будет размещена HTML-форма для ввода данных. Пользователи должны видеть эту страницу при обращении к корневому URL.

-При доступе к корневому URL, сервер должен выводить на страницу HTML-форму, созданную в пункте 2.

-Запустите ваш сервер и убедитесь, что он обрабатывает POST-запросы и выводит данные из формы в консоль.

-Обработайте возможные ошибки, такие как отсутствие POST-запроса или некорректные данные в форме.

-Эта задача позволит вам понять, как создавать простые HTTP-серверы и обрабатывать POST-запросы для приема данных от пользователей."""
from flask import Flask, render_template, request

app = Flask(__name__)


@app.route('/')
def index():
    return render_template('index.html')


@app.route('/submit', methods=['POST'])
def submit():
    try:
        user_data = request.form['data']
        print(f"Received data from the form: {user_data}")
        return f"Received data from the form: {user_data}"
    except Exception as e:
        print(f"Error processing form data: {e}")
        return "Error processing form data"


if __name__ == '__main__':
    app.run(debug=True)
